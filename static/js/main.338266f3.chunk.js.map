{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","App.module.css","components/Chart/Chart.module.css","images/covd.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","active","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","infected","url","fetchData","country","a","changableUrl","axios","get","fetchGraph","shortData","map","dailyData","total","date","reportDate","countries","c","name","Charts","useState","setDailyData","useEffect","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","CountryPicker","handleCountryChange","fetchCountries","setFetchCountries","fetchApi","Fragment","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","key","btnn","onClick","App","state","setState","this","src","covdimg","alt","image","heading","Chart","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.338266f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__ofM1A\",\"card\":\"Cards_card__1rG0m\",\"infected\":\"Cards_infected__mGwhe\",\"deaths\":\"Cards_deaths__3yRvq\",\"recovered\":\"Cards_recovered__1sxcn\",\"active\":\"Cards_active__iQLjX\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.active)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Active Cases\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value - deaths.value - recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of covid 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Confirmed Cases\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of infected cases of covid 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recovered cases of covid 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of Deaths</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changableUrl = url;\r\n  if (country) {\r\n    changableUrl = url + \"/countries/\" + country;\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      deaths,\r\n      recovered,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchGraph = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const shortData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return shortData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((c) => c.name);\r\n  } catch (error) {}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchGraph } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Charts = ({ data, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchGraph());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const barChart = data.confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [\r\n              data.confirmed.value,\r\n              data.recovered.value,\r\n              data.deaths.value,\r\n            ],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current stats of ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infecter\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\nexport default Charts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { countries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchCountries, setFetchCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setFetchCountries(await countries());\r\n    };\r\n    fetchApi();\r\n  }, [setFetchCountries]);\r\n\r\n  const btnclk = (con) => {\r\n    handleCountryChange(con);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <FormControl className={styles.formControl}>\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Country...</option>\r\n          {fetchCountries.map((c) => (\r\n            <option key={c} value={c}>\r\n              {c}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n      <div className=\"row\">\r\n        <button className={styles.btnn} onClick={() => handleCountryChange(\"\")}>\r\n          Global\r\n        </button>\r\n        <button\r\n          className={styles.btnn}\r\n          onClick={() => handleCountryChange(\"India\")}\r\n        >\r\n          India\r\n        </button>\r\n        <button\r\n          className={styles.btnn}\r\n          onClick={() => handleCountryChange(\"US\")}\r\n        >\r\n          USA\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CountryPicker;\r\n//{<button onClick={btnclk(\"India\")}>India</button>}\r\n","import React, { Component } from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api/index\";\r\nimport covdimg from \"./images/covd.png\";\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n    this.setState({ data: data });\r\n  }\r\n\r\n  handleCountryChange = async (c) => {\r\n    const data = await fetchData(c);\r\n    this.setState({ data: data, country: c });\r\n  };\r\n  heading(c) {\r\n    if (c.length) {\r\n      return `Data of ${c}`;\r\n    } else {\r\n      return `Cases WorldWide`;\r\n    }\r\n  }\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={covdimg} alt=\"COVID-19\" className={styles.image} />\r\n        <br />\r\n        <br />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <h1>{this.heading(country)}</h1>\r\n        <Cards data={data} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2ZTKF\",\"btnn\":\"CountryPicker_btnn__1OCHG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3FA7L\",\"image\":\"App_image__3qu67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2qD8y\"};","module.exports = __webpack_public_path__ + \"static/media/covd.d7265326.png\";"],"sourceRoot":""}